// <auto-generated />
using System;
using DineinEasy.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DineinEasy.Data.Migrations
{
    [DbContext(typeof(EXE2_DineinEasyContext))]
    [Migration("20241002122446_InitDatabase")]
    partial class InitDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DineinEasy.Data.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id")
                        .HasName("PK_Area_1");

                    b.ToTable("Area", "public");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("ExpriedDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Banner", "public");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Category", "public");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("Customer", "public");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Notification", "public");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.OrderBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("BookingTime")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsChecking")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int?>("NumberSeats")
                        .HasColumnType("integer");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("integer");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("OrderBooking", "public");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.OrderMembership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Discount")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("PackageId")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int>("ValueDays")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("OrderMembership", "public");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Discount")
                        .HasColumnType("double precision");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int>("ValueDays")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Package", "public");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AreaId")
                        .HasColumnType("integer");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberTable")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Restaurant", "public");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.RestaurantImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("RestaurantImage", "public");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Review", "public");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.ReviewImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ReviewId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReviewId");

                    b.ToTable("ReviewImage", "public");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.SavedRestaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustmerId")
                        .HasColumnType("integer");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustmerId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("SavedRestaurant", "public");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.TimeFrame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly>("ClosedTime")
                        .HasColumnType("time without time zone");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<TimeOnly>("OpenedTime")
                        .HasColumnType("time without time zone");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("TimeFrame", "public");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character(10)")
                        .IsFixedLength();

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("User", "public");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.Notification", b =>
                {
                    b.HasOne("DineinEasy.Data.Models.Customer", "Customer")
                        .WithMany("Notifications")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_Notification_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.OrderBooking", b =>
                {
                    b.HasOne("DineinEasy.Data.Models.Customer", "Customer")
                        .WithMany("OrderBookings")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_OrderBooking_Customer");

                    b.HasOne("DineinEasy.Data.Models.Restaurant", "Restaurant")
                        .WithMany("OrderBookings")
                        .HasForeignKey("RestaurantId")
                        .HasConstraintName("FK_OrderBooking_Restaurant");

                    b.Navigation("Customer");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.OrderMembership", b =>
                {
                    b.HasOne("DineinEasy.Data.Models.Package", "Package")
                        .WithMany("OrderMemberships")
                        .HasForeignKey("PackageId")
                        .IsRequired()
                        .HasConstraintName("FK_OrderMembership_Package");

                    b.HasOne("DineinEasy.Data.Models.Restaurant", "Restaurant")
                        .WithMany("OrderMemberships")
                        .HasForeignKey("RestaurantId")
                        .IsRequired()
                        .HasConstraintName("FK_OrderMembership_Restaurant");

                    b.Navigation("Package");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.Restaurant", b =>
                {
                    b.HasOne("DineinEasy.Data.Models.Area", "Area")
                        .WithMany("Restaurants")
                        .HasForeignKey("AreaId")
                        .IsRequired()
                        .HasConstraintName("FK_Restaurant_Area");

                    b.HasOne("DineinEasy.Data.Models.Category", "Category")
                        .WithMany("Restaurants")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Restaurant_Category");

                    b.Navigation("Area");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.RestaurantImage", b =>
                {
                    b.HasOne("DineinEasy.Data.Models.Restaurant", "Restaurant")
                        .WithMany("RestaurantImages")
                        .HasForeignKey("RestaurantId")
                        .HasConstraintName("FK_RestaurantImage_Restaurant");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.Review", b =>
                {
                    b.HasOne("DineinEasy.Data.Models.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_Review_Customer");

                    b.HasOne("DineinEasy.Data.Models.Restaurant", "Restaurant")
                        .WithMany("Reviews")
                        .HasForeignKey("RestaurantId")
                        .IsRequired()
                        .HasConstraintName("FK_Review_Restaurant");

                    b.Navigation("Customer");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.ReviewImage", b =>
                {
                    b.HasOne("DineinEasy.Data.Models.Review", "Review")
                        .WithMany("ReviewImages")
                        .HasForeignKey("ReviewId")
                        .IsRequired()
                        .HasConstraintName("FK_ReviewImage_Review");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.SavedRestaurant", b =>
                {
                    b.HasOne("DineinEasy.Data.Models.Customer", "Custmer")
                        .WithMany("SavedRestaurants")
                        .HasForeignKey("CustmerId")
                        .IsRequired()
                        .HasConstraintName("FK_SavedRestaurant_Customer");

                    b.HasOne("DineinEasy.Data.Models.Restaurant", "Restaurant")
                        .WithMany("SavedRestaurants")
                        .HasForeignKey("RestaurantId")
                        .IsRequired()
                        .HasConstraintName("FK_SavedRestaurant_Restaurant");

                    b.Navigation("Custmer");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.TimeFrame", b =>
                {
                    b.HasOne("DineinEasy.Data.Models.Restaurant", "Restaurant")
                        .WithMany("TimeFrames")
                        .HasForeignKey("RestaurantId")
                        .IsRequired()
                        .HasConstraintName("FK_TimeFrame_Restaurant");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.Area", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.Category", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.Customer", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("OrderBookings");

                    b.Navigation("Reviews");

                    b.Navigation("SavedRestaurants");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.Package", b =>
                {
                    b.Navigation("OrderMemberships");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.Restaurant", b =>
                {
                    b.Navigation("OrderBookings");

                    b.Navigation("OrderMemberships");

                    b.Navigation("RestaurantImages");

                    b.Navigation("Reviews");

                    b.Navigation("SavedRestaurants");

                    b.Navigation("TimeFrames");
                });

            modelBuilder.Entity("DineinEasy.Data.Models.Review", b =>
                {
                    b.Navigation("ReviewImages");
                });
#pragma warning restore 612, 618
        }
    }
}
